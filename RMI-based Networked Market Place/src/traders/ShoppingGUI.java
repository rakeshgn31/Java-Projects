/*
 * Welcome to NetBeans...!!!
 */
package traders;

import banking.Bank;
import market.Item;
import java.awt.Component;
import java.awt.Container;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import market.IFMarket;

/**
 *
 * @author admin
 */
public class ShoppingGUI extends javax.swing.JFrame {

    String strTraderName;
    DefaultTableModel tableModel;
    
    // Object of class responsible for calling remote methods on server
    TradeImpl objTradeImpl;    
    
    /**
     * Creates new form ShoppingGUI
     */
    public ShoppingGUI() {
        
        initComponents();
        
        strTraderName = "";
        tableModel = (DefaultTableModel) this.tblInventory.getModel();
        
        // Initialize an instance of TradeImpl class
        try {
        objTradeImpl = new TradeImpl(this);
        } catch (RemoteException ex) {
            System.out.println("Remote Exception while initialising TradeImpl. Error :: " + ex.getMessage());
        }

        EnableComponents(pnlContents, false);
        AddItemstoSell();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlWelcome = new javax.swing.JPanel();
        lblWelcome = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        tfUsername = new javax.swing.JTextField();
        lblBalance = new javax.swing.JLabel();
        tfBalanceValue = new javax.swing.JTextField();
        pnlContents = new javax.swing.JPanel();
        pnlBuyItems = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventory = new javax.swing.JTable();
        btnBuySelectedItem = new javax.swing.JButton();
        btnAddSelectedToWishList = new javax.swing.JButton();
        lblWishPrice = new javax.swing.JLabel();
        tfWishPrice = new javax.swing.JTextField();
        btnRefreshItems = new javax.swing.JButton();
        pnlSellItems = new javax.swing.JPanel();
        lstSellItems = new java.awt.List();
        lblEnterPrice = new javax.swing.JLabel();
        tfSellingPrice = new javax.swing.JTextField();
        btnSellItem = new javax.swing.JButton();
        pnlStatusbar = new javax.swing.JPanel();
        tfStatusField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SalesShore - Buying and selling made easy...!!!");
        setAlwaysOnTop(true);
        setType(java.awt.Window.Type.UTILITY);

        pnlWelcome.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblWelcome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcome.setText("  Username  ");
        lblWelcome.setToolTipText("");
        lblWelcome.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btnLogin.setText("Log In");
        btnLogin.setToolTipText("Registers with the server");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnLogout.setText("Log out");
        btnLogout.setToolTipText("");
        btnLogout.setEnabled(false);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        tfUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblBalance.setText("Balance");

        tfBalanceValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfBalanceValue.setText("0");
        tfBalanceValue.setEnabled(false);

        javax.swing.GroupLayout pnlWelcomeLayout = new javax.swing.GroupLayout(pnlWelcome);
        pnlWelcome.setLayout(pnlWelcomeLayout);
        pnlWelcomeLayout.setHorizontalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addComponent(lblWelcome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addComponent(lblBalance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfBalanceValue, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogout)
                .addContainerGap())
        );
        pnlWelcomeLayout.setVerticalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnLogin)
                .addComponent(btnLogout)
                .addComponent(lblWelcome)
                .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblBalance)
                .addComponent(tfBalanceValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlContents.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlContents.setName(""); // NOI18N

        pnlBuyItems.setBorder(javax.swing.BorderFactory.createTitledBorder("Buy Items"));

        tblInventory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tblInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Seller"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInventory.setColumnSelectionAllowed(true);
        tblInventory.setDragEnabled(true);
        jScrollPane1.setViewportView(tblInventory);
        tblInventory.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnBuySelectedItem.setText("Buy Item");
        btnBuySelectedItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuySelectedItemActionPerformed(evt);
            }
        });

        btnAddSelectedToWishList.setText("Wish Item");
        btnAddSelectedToWishList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSelectedToWishListActionPerformed(evt);
            }
        });

        lblWishPrice.setText("Wish Price");

        btnRefreshItems.setText("Refresh Items");
        btnRefreshItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshItemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuyItemsLayout = new javax.swing.GroupLayout(pnlBuyItems);
        pnlBuyItems.setLayout(pnlBuyItemsLayout);
        pnlBuyItemsLayout.setHorizontalGroup(
            pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuyItemsLayout.createSequentialGroup()
                .addGroup(pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBuyItemsLayout.createSequentialGroup()
                        .addComponent(lblWishPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfWishPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddSelectedToWishList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuySelectedItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefreshItems)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlBuyItemsLayout.setVerticalGroup(
            pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuyItemsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSelectedToWishList)
                    .addComponent(btnBuySelectedItem)
                    .addComponent(lblWishPrice)
                    .addComponent(tfWishPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshItems)))
        );

        pnlSellItems.setBorder(javax.swing.BorderFactory.createTitledBorder("Sell Items"));

        lblEnterPrice.setText("Enter Price");

        btnSellItem.setText("Sell Item");
        btnSellItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSellItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSellItemsLayout = new javax.swing.GroupLayout(pnlSellItems);
        pnlSellItems.setLayout(pnlSellItemsLayout);
        pnlSellItemsLayout.setHorizontalGroup(
            pnlSellItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lstSellItems, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSellItemsLayout.createSequentialGroup()
                .addComponent(lblEnterPrice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSellItem))
        );
        pnlSellItemsLayout.setVerticalGroup(
            pnlSellItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSellItemsLayout.createSequentialGroup()
                .addComponent(lstSellItems, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSellItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnterPrice)
                    .addComponent(tfSellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSellItem)))
        );

        pnlStatusbar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tfStatusField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfStatusField.setEnabled(false);

        javax.swing.GroupLayout pnlStatusbarLayout = new javax.swing.GroupLayout(pnlStatusbar);
        pnlStatusbar.setLayout(pnlStatusbarLayout);
        pnlStatusbarLayout.setHorizontalGroup(
            pnlStatusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tfStatusField)
        );
        pnlStatusbarLayout.setVerticalGroup(
            pnlStatusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tfStatusField)
        );

        javax.swing.GroupLayout pnlContentsLayout = new javax.swing.GroupLayout(pnlContents);
        pnlContents.setLayout(pnlContentsLayout);
        pnlContentsLayout.setHorizontalGroup(
            pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlStatusbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContentsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlBuyItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(pnlSellItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlContentsLayout.setVerticalGroup(
            pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentsLayout.createSequentialGroup()
                .addGroup(pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlSellItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBuyItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlStatusbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlContents, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(pnlWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlContents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Enables of disables the children of the entire parent container
    private void EnableComponents(Container container, boolean bEnable) {
        Component[] components = container.getComponents();
        for (Component component : components) {
            component.setEnabled(bEnable);
            if (component instanceof Container) {
                EnableComponents((Container)component, bEnable);
            }
        }
    }
    
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        
        String sTraderName = tfUsername.getText().trim();
        strTraderName = sTraderName;
        if(!"".equals(sTraderName)) {        
            // Register the trader with the market for trade
            objTradeImpl.registerTrader(sTraderName);
            this.lblWelcome.setText("Welcome  ");
            this.tfUsername.setEnabled(false);
            EnableComponents(pnlContents, true);
            RefreshTable();
            this.btnLogin.setEnabled(false);
            this.btnLogout.setEnabled(true);
        } else {
            tfStatusField.setText("Enter a valid username...");
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnBuySelectedItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuySelectedItemActionPerformed

        int nRowIndex = this.tblInventory.getSelectedRow();
        if(nRowIndex != -1) {
             String strItemName = tableModel.getValueAt(nRowIndex, 0).toString();
             String strSellerName = tableModel.getValueAt(nRowIndex, 2).toString();
             int nDisplayedPrice = Integer.parseInt(tableModel.getValueAt(nRowIndex, 1).toString().trim());
             objTradeImpl.buyItemFromInventory(strTraderName, strSellerName, strItemName, nDisplayedPrice);
        } else {
            this.setStatus("Select an item to buy");
        }
    }//GEN-LAST:event_btnBuySelectedItemActionPerformed

    private void btnAddSelectedToWishListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSelectedToWishListActionPerformed

        int nRowIndex = this.tblInventory.getSelectedRow();
        if(nRowIndex != -1) {
            int nWishPrice = Integer.parseInt(tfWishPrice.getText().trim());
            String strItemName = tableModel.getValueAt(nRowIndex, 0).toString();
            objTradeImpl.addItemToWishList(strTraderName, strItemName, nWishPrice);
        } else {
            this.setStatus("Select an item to add to wish list");
        }
    }//GEN-LAST:event_btnAddSelectedToWishListActionPerformed

    private void btnSellItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSellItemActionPerformed
        
        String strItemSelectedForSale = this.lstSellItems.getSelectedItem();
        
        if(strItemSelectedForSale != null) {
            strItemSelectedForSale = strItemSelectedForSale.trim();
            int nSellingPrice = Integer.parseInt(tfSellingPrice.getText().trim());
            objTradeImpl.placeItemForSale(strTraderName, strItemSelectedForSale, nSellingPrice);
        } else {
            this.setStatus("Select an item to be sold...");
        }
    }//GEN-LAST:event_btnSellItemActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed

        String sTraderName = tfUsername.getText().trim();
        if(!"".equals(sTraderName)) {
            // Register the trader with the market for trade
            objTradeImpl.unregisterTrader(sTraderName);
            this.tfUsername.setText("");
            this.tfBalanceValue.setText("0");
            this.lblWelcome.setText("Username ");
            this.tfUsername.setEnabled(true);
            EnableComponents(pnlContents, false);
            this.btnLogin.setEnabled(true);
            this.btnLogout.setEnabled(false);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnRefreshItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshItemsActionPerformed

        RefreshTable();
    }//GEN-LAST:event_btnRefreshItemsActionPerformed

    public void Initialize(IFMarket marketServer, Bank objBankClient) {
        
        // Set the market and bank remote objects in TradeImpl class
        objTradeImpl.initializeObjects(marketServer, objBankClient);                
    }

    // Sets the status of the remote call/notification from server in the status bar.
    public void setStatus(String strStatus) {
        SwingUtilities.invokeLater(() -> {
            this.tfStatusField.setText(strStatus);
        });        
    }
    
    public void removeSoldItemFromList(String strItemName) {
        this.lstSellItems.remove(strItemName);
    }
    
    public void refreshBalance(Integer nBalance) {
        SwingUtilities.invokeLater(() -> {
            this.tfBalanceValue.setText(nBalance.toString());
        });
    }
    
    public void RefreshTable() {
        
        // Clear all the existing rows in the table
        int rowCount = tableModel.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            tableModel.removeRow(i);
        }
        
        // Get the fresh stock from the market inventory and update the table
        Map<String, ArrayList<Item>> stock = objTradeImpl.getAllItemsFromInventory();
        if(stock != null){
            for(String key : stock.keySet()) {
                ArrayList<Item> tempList = stock.get(key);
                for(Item item : tempList) {
                    if(key.equals(strTraderName)) {
                        break;
                    } else {
                        // Add rows to the table
                        tableModel.addRow(new Object[]{item.getName(), item.getPrice(), key});
                    }
                }
            }
        }
    }
    
    private void AddItemstoSell() {
        this.lstSellItems.add("Teak Table");
        this.lstSellItems.add("Cotton Shirt");
        this.lstSellItems.add("Hockey Stick");
        this.lstSellItems.add("Cricket Bat");
        this.lstSellItems.add("Woolen Gloves");
        this.lstSellItems.add("Bluetooth Headset");
        this.lstSellItems.add("Steel plate");
        this.lstSellItems.add("Codrey Jeans pant");
        this.lstSellItems.add("Waterproof Woollen Jacket");
        this.lstSellItems.add("Designer T-Shirt");
        this.lstSellItems.add("Table cloth pair");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSelectedToWishList;
    private javax.swing.JButton btnBuySelectedItem;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRefreshItems;
    private javax.swing.JButton btnSellItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JLabel lblEnterPrice;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel lblWishPrice;
    private java.awt.List lstSellItems;
    private javax.swing.JPanel pnlBuyItems;
    private javax.swing.JPanel pnlContents;
    private javax.swing.JPanel pnlSellItems;
    private javax.swing.JPanel pnlStatusbar;
    private javax.swing.JPanel pnlWelcome;
    private javax.swing.JTable tblInventory;
    private javax.swing.JTextField tfBalanceValue;
    private javax.swing.JTextField tfSellingPrice;
    private javax.swing.JTextField tfStatusField;
    private javax.swing.JTextField tfUsername;
    private javax.swing.JTextField tfWishPrice;
    // End of variables declaration//GEN-END:variables
}
