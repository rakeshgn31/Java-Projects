/*
 * Welcome to NetBeans...!!!
 */
package traders;

import java.util.ArrayList;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import market.Item;

/**
 *
 * @author admin
 */
public class BuyPane extends javax.swing.JPanel {

    ShoppingGUI mainGUI;
    DefaultTableModel tableModel;
    
    public BuyPane(ShoppingGUI objMainGUI) {
        
        initComponents();
        this.mainGUI = objMainGUI;
        tableModel = (DefaultTableModel) this.tblInventory.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBuyItems = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventory = new javax.swing.JTable();
        btnBuySelectedItem = new javax.swing.JButton();
        btnAddSelectedToWishList = new javax.swing.JButton();
        lblWishPrice = new javax.swing.JLabel();
        tfWishPrice = new javax.swing.JTextField();
        btnRefreshItems = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnlBuyItems.setBorder(javax.swing.BorderFactory.createTitledBorder("Buy Items"));

        tblInventory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tblInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Seller"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInventory.setColumnSelectionAllowed(true);
        tblInventory.setDragEnabled(true);
        jScrollPane1.setViewportView(tblInventory);

        btnBuySelectedItem.setText(" Buy Item ");
        btnBuySelectedItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuySelectedItemActionPerformed(evt);
            }
        });

        btnAddSelectedToWishList.setText("Wish Item");
        btnAddSelectedToWishList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSelectedToWishListActionPerformed(evt);
            }
        });

        lblWishPrice.setText("Enter Wishing Price");

        btnRefreshItems.setText(" Refresh Inventory ");
        btnRefreshItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshItemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuyItemsLayout = new javax.swing.GroupLayout(pnlBuyItems);
        pnlBuyItems.setLayout(pnlBuyItemsLayout);
        pnlBuyItemsLayout.setHorizontalGroup(
            pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
            .addGroup(pnlBuyItemsLayout.createSequentialGroup()
                .addGroup(pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBuyItemsLayout.createSequentialGroup()
                        .addComponent(lblWishPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfWishPrice))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuyItemsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBuySelectedItem)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRefreshItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddSelectedToWishList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlBuyItemsLayout.setVerticalGroup(
            pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuyItemsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWishPrice)
                    .addComponent(tfWishPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddSelectedToWishList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(pnlBuyItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshItems)
                    .addComponent(btnBuySelectedItem)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlBuyItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlBuyItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void RefreshTable() {
        
        String strTraderName = mainGUI.getTraderName();
        
        // Clear all the existing rows in the table
        int rowCount = tableModel.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            tableModel.removeRow(i);
        }
        
        // Get the fresh stock from the market inventory and update the table
        Map<String, ArrayList<Item>> stock = mainGUI.getAllItemsFromInventory();
        if(stock != null){
            for(String key : stock.keySet()) {
                ArrayList<Item> tempList = stock.get(key);
                for(Item item : tempList) {
                    if(key.equals(strTraderName)) {
                        break;
                    } else {
                        // Add rows to the table
                        tableModel.addRow(new Object[]{item.getName(), item.getPrice(), key});
                    }
                }
            }
        }
    }

    private void btnBuySelectedItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuySelectedItemActionPerformed

        int nRowIndex = this.tblInventory.getSelectedRow();
        if(nRowIndex != -1) {
            String strItemName = tableModel.getValueAt(nRowIndex, 0).toString();
            String strSellerName = tableModel.getValueAt(nRowIndex, 2).toString();
            int nDisplayedPrice = Integer.parseInt(tableModel.getValueAt(nRowIndex, 1).toString().trim());

            // Call method in shopping GUI
            mainGUI.buyItemFromStore(strSellerName, strItemName, nDisplayedPrice);
        } else {
            // Call method on GUI to display status
            mainGUI.setStatus("Select an item to buy");
        }
    }//GEN-LAST:event_btnBuySelectedItemActionPerformed

    private void btnAddSelectedToWishListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSelectedToWishListActionPerformed

        int nRowIndex = this.tblInventory.getSelectedRow();
        if(nRowIndex != -1) {
            int nWishPrice = Integer.parseInt(tfWishPrice.getText().trim());
            String strItemName = tableModel.getValueAt(nRowIndex, 0).toString();
            
            // Call method on Main GUI to invoke the remote method
            mainGUI.addItemToWishList(strItemName, nWishPrice);
        } else {
            mainGUI.setStatus("Select an item to add to wish list");
        }
    }//GEN-LAST:event_btnAddSelectedToWishListActionPerformed

    private void btnRefreshItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshItemsActionPerformed

        RefreshTable();
    }//GEN-LAST:event_btnRefreshItemsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSelectedToWishList;
    private javax.swing.JButton btnBuySelectedItem;
    private javax.swing.JButton btnRefreshItems;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblWishPrice;
    private javax.swing.JPanel pnlBuyItems;
    private javax.swing.JTable tblInventory;
    private javax.swing.JTextField tfWishPrice;
    // End of variables declaration//GEN-END:variables
}
